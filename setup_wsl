#!/bin/bash

export MOODLEVERSION=383

function setup_repos {
    # Setup Repos
    echo "Ensure that you have setup the SSH key for the github repo or this will fail."
    echo "id_rsa is 600, id_rsa.pub, config are 644, ~/.ssh is 700"

    # Add symlink for git projects
    cd ~/
    SYMLINK=~/gitprojects
    if [ ! -d "$SYMLINK" ]; then
        mkdir gitprojects
    fi
    echo "[Adding development repo]"
    # Setup moodle github repo
    cd gitprojects
    if ! (git clone git://github.com/cjamieso/moodle$MOODLEVERSION.git)
        then
        echo "Error cloning moodle repo."
        exit 1
    fi
    cd moodle$MOODLEVERSION
    git remote set-url origin git@github.com:cjamieso/moodle$MOODLEVERSION.git
    git clone git://github.com/moodlehq/moodle-local_codechecker.git local/codechecker
    git clone git://github.com/moodlehq/moodle-docker.git
    # git submodule update --init

    echo "[Adding eclass repo]"
    # Setup eclass-craig
    cd ~/gitprojects
    if ! (git clone git@bitbucket.org:cjamieso/eclass-craig.git)
        then
        echo "Error cloning eclass-craig: is SSH key setup?"
        exit 1
    fi
    cd eclass-craig
    git remote add eclass-dev ssh://git@bitbucket.org/uofa-eclass/eclass-dev.git
    git fetch eclass-dev
    git remote add upstream ssh://git@bitbucket.org/uofa-eclass/eclass.git
    git config branch.autosetupmerge always
    git config branch.autosetuprebase local
    git config push.default upstream
    git remote add craig ~/gitprojects/moodle$MOODLEVERSION
    git fetch craig

    # echo "[Adding eclass style repo]"
    # Setup eclass-craig
    # cd ~/gitprojects
    # if ! (git clone git@bitbucket.org:uofa-eclass/boost-eclass-branding.git)
        # then
        # echo "Error cloning eclass-craig: is SSH key setup?"
        # exit 1
    # fi

    echo "[Adding moodlescripts]"
    # Setup moodlescripts project
    cd ~/gitprojects
    if ! (git clone git://github.com/cjamieso/moodlescripts.git)
        then
        echo "Error cloning moodlescripts."
        exit 1
    fi
    cd moodlescripts
    git remote set-url origin git@github.com:cjamieso/moodlescripts.git
}

function setup_config {
    echo "[Performing config]"
    cd ~/
    SYMLINK=~/gitprojects
    if [ ! -d "$SYMLINK" ]; then
        mkdir gitprojects
    fi
    # change set bell-style none in /etc/inputrc
    sudo sed -i 's/# set bell-style none/set bell-style none/g' /etc/inputrc

    # add line "set visualbell" to ~/.vimrc
    touch ~/.vimrc
    echo -e "set visualbell" >> ~/.vimrc

    # set docker variables
    echo -e "export MOODLE_DOCKER_WWWROOT=/home/craig/gitprojects/moodle$MOODLEVERSION" >> ~/.bashrc
    echo -e "export MOODLE_DOCKER_WEB_PORT=0.0.0.0:8000" >> ~/.bashrc
    echo -e "export MOODLE_DOCKER_DB=pgsql" >> ~/.bashrc
    echo -e "export MOODLE_DOCKER_BROWSER=chrome" >> ~/.bashrc

    cd ~/gitprojects/moodlescripts
    sudo cp rebase util behat phpu mdocker /usr/local/bin
    cp .gitconfig ~/.gitconfig
    git config --global rerere.enabled true

    echo "[Setting up nodejs]"
    # Setup NodeJS & files inside moodle repo
    curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
    echo "[Installing nodejs]"
    sudo apt-get install -y nodejs
    echo "[Symlink for eslint]"
    cd ~/gitprojects/moodle$MOODLEVERSION
    npm install
    sudo ln -s ~/gitprojects/moodle$MOODLEVERSION/node_modules/eslint/bin/eslint.js /usr/local/bin/eslint

    echo "[Setting up php7 and phpcs]"
    # Setup PHP7.1 + PHPCS
    sudo apt-get install -y python-software-properties
    sudo add-apt-repository -y ppa:ondrej/php
    sudo apt-get update -y
    sudo apt-get install -y php7.1
    sudo apt-get install -y php7.1-xml
    sudo ln -s ~/gitprojects/moodle$MOODLEVERSION/local/codechecker/pear/PHP/scripts/phpcs /usr/bin/phpcs
    phpcs --config-set installed_paths ~/gitprojects/moodle$MOODLEVERSION/local/codechecker

    echo "[Configuring Locales]"
    # Configuring locale
    sudo locale-gen en_US.UTF-8
    sudo dpkg-reconfigure locales
}

UNAME=`ls /mnt/c/Users | grep "^c"`
if [ -z $UNAME ]; then
    echo "UNAME not correctly located"
    return 1;
fi
export DIR=/mnt/c/Users/$UNAME/gitprojects

echo "Code folder set to: {$DIR}"

if [ "$1" = "repos" ]; then
    setup_repos
elif [ "$1" = "config" ]; then
    setup_config
else
    echo "valid options are: {repos|config}"
fi
