#!/bin/bash

export MOODLEVERSION=410

function permissions {
    echo "Setting permissions for SSH files"
    echo "Ensure that files are already copied over!"
    cd ~/
    chmod 700 .ssh
    cd .ssh
    sudo chown craig:craig *
    chmod 600 id_rsa
    chmod 644 id_rsa.pub config known_hosts
}

function setup_repos {
    # Setup Repos
    echo "Ensure that you have setup the SSH key for the github repo or this will fail."
    echo "id_rsa is 600, id_rsa.pub, config are 644, ~/.ssh is 700"

    # Add symlink for git projects
    cd ~/
    SYMLINK=~/gitprojects
    if [ ! -d "$SYMLINK" ]; then
        mkdir gitprojects
    fi
    echo "[Adding development repo]"
    # Setup moodle github repo
    cd gitprojects
    if [ ! -d "moodle$MOODLEVERSION" ]; then
        if ! (git clone git@github.com:cjamieso/moodle$MOODLEVERSION.git)
            then
            echo "Error cloning moodle repo."
            exit 1
        fi
        cd moodle$MOODLEVERSION
        git remote set-url origin git@github.com:cjamieso/moodle$MOODLEVERSION.git

        git clone https://github.com/moodlehq/moodle-local_codechecker.git local/codechecker
        git clone https://github.com/moodlehq/moodle-docker
        # git submodule update --init
    else
        echo "[development repo already exists]"
    fi

    echo "[Adding eclass repo]"
    # Setup eclass-craig
    cd ~/gitprojects
    if [ ! -d "eclass-craig" ]; then
        if ! (git clone git@bitbucket.org:cjamieso/eclass-craig311.git eclass-craig)
            then
            echo "Error cloning eclass-craig: is SSH key setup?"
            exit 1
        fi
        cd eclass-craig
        git remote add upstream git@bitbucket.org:isteclass/eclass.git
        git config branch.autosetupmerge always
        git config branch.autosetuprebase local
        git config push.default upstream
        git remote add craig ~/gitprojects/moodle$MOODLEVERSION
        git fetch craig
    else
        echo "[eclass repo already exists]"
    fi

    # echo "[Adding eclass style repo]"
    # # Setup eclass-craig
    # cd ~/gitprojects
    # if ! (git clone git@bitbucket.org:isteclass/boost-eclass-branding.git)
    #     then
    #     echo "Error cloning eclass-craig: is SSH key setup?"
    #     exit 1
    # fi

    echo "[Adding moodlescripts]"
    # Setup moodlescripts project
    cd ~/gitprojects
    if [ ! -d "moodlescripts" ]; then
        if ! (git clone git@github.com:cjamieso/moodlescripts.git)
            then
            echo "Error cloning moodlescripts."
            exit 1
        fi
        cd moodlescripts
        git remote set-url origin git@github.com:cjamieso/moodlescripts.git
    else
        echo "[moodlescripts repo already exists]"
    fi
}

function setup_config {
    echo "[Performing config]"
    cd ~/
    SYMLINK=~/gitprojects
    if [ ! -d "$SYMLINK" ]; then
        mkdir gitprojects
    fi
    # change set bell-style none in /etc/inputrc
    sudo sed -i 's/# set bell-style none/set bell-style none/g' /etc/inputrc

    # add line "set visualbell" to ~/.vimrc
    touch ~/.vimrc
    echo -e "set visualbell" >> ~/.vimrc

    # set docker variables
    echo -e "export MOODLE_DOCKER_WWWROOT=/home/craig/gitprojects/moodle$MOODLEVERSION" >> ~/.bashrc
    echo -e "export MOODLE_DOCKER_WEB_PORT=0.0.0.0:8000" >> ~/.bashrc
    echo -e "export MOODLE_DOCKER_DB=pgsql" >> ~/.bashrc
    echo -e "export MOODLE_DOCKER_BROWSER=chrome" >> ~/.bashrc
    echo -e "export MOODLEVERSION=$MOODLEVERSION" >> ~/.bashrc

    cd ~/gitprojects/moodlescripts
    sudo cp rebase util behat phpu mdocker moodle_libs /usr/local/bin
    cp .gitconfig ~/.gitconfig
    git config --global rerere.enabled true

    echo "[Setting up nodejs]"
    # Setup NodeJS & files inside moodle repo
    curl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash -
    echo "[Installing nodejs]"
    sudo apt-get install -y nodejs
    echo "[Symlink for eslint]"
    cd ~/gitprojects/moodle$MOODLEVERSION
    npm install
    sudo ln -s ~/gitprojects/moodle$MOODLEVERSION/node_modules/eslint/bin/eslint.js /usr/local/bin/eslint

    echo "[Setting up php7 and phpcs]"
    # Setup PHP7.1 + PHPCS
    sudo apt-get install -y python-software-properties
    sudo add-apt-repository -y ppa:ondrej/php
    sudo apt-get update -y
    sudo apt-get install -y php7.4
    sudo apt-get install -y php7.4-xml
    sudo ln -s ~/gitprojects/moodle$MOODLEVERSION/local/codechecker/phpcs/bin/phpcs /usr/bin/phpcs
    chmod 755 ~/gitprojects/moodle$MOODLEVERSION/local/codechecker/phpcs/bin/phpcs
    phpcs --config-set installed_paths ~/gitprojects/moodle$MOODLEVERSION/local/codechecker

    echo "[Configuring Locales]"
    # Configuring locale
    sudo locale-gen en_US.UTF-8
    sudo dpkg-reconfigure locales
}

if [ "$1" = "repos" ]; then
    setup_repos
elif [ "$1" = "config" ]; then
    setup_config
elif [ "$1" = "permissions" ]; then
    permissions
else
    echo "valid options are: {repos|config}"
fi
